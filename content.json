{"meta":{"title":"Mirage's Blog","subtitle":"随心记录～","description":"越过山丘，才发现无人等候","author":"Mirage","url":"http://example.com","root":"/"},"pages":[{"title":"友情链接","date":"2022-02-04T05:22:48.000Z","updated":"2022-02-04T05:23:23.314Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-02-04T05:21:49.000Z","updated":"2022-02-04T05:22:24.616Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-02-04T05:20:53.000Z","updated":"2022-02-04T05:21:37.922Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Flask跨域方案","slug":"Flask跨域方案","date":"2022-02-08T08:28:55.000Z","updated":"2022-02-08T08:49:11.589Z","comments":true,"path":"2022/02/08/Flask跨域方案/","link":"","permalink":"http://example.com/2022/02/08/Flask%E8%B7%A8%E5%9F%9F%E6%96%B9%E6%A1%88/","excerpt":"很容易搜索到多种解决方法，暂先记录几种最简单的。 为response添加headers 使用make_response先创建响应，再给响应添加headers 12345@app.route(&#x27;/&#x27;)def index(): rsp = make_response(&#x27;Hello world.&#x27;) rsp.headers[&#x27;Access-Control-Allow-Origin&#x27;] = &#x27;*&#x27; return rsp return响应三元组(response, status, headers)","text":"很容易搜索到多种解决方法，暂先记录几种最简单的。 为response添加headers 使用make_response先创建响应，再给响应添加headers 12345@app.route(&#x27;/&#x27;)def index(): rsp = make_response(&#x27;Hello world.&#x27;) rsp.headers[&#x27;Access-Control-Allow-Origin&#x27;] = &#x27;*&#x27; return rsp return响应三元组(response, status, headers) 123@app.route(&#x27;/&#x27;)def index(): return &#x27;Hello world&#x27;, 200, &#123;&#x27;Access-Control-Allow-Origin&#x27;:&#x27;*&#x27;&#125; 注册请求回调添加headers当大量路由都需要允许跨域时，为每个路由逐个添加变得非常麻烦且不易维护。这时可以使用Flask提供的回调接口为请求注册回调，自动添加Access-Control-Allow-Origin的header。 123456@app.after_requestdef headers_hook(response): if request.method == &#x27;GET&#x27;: response.headers[&#x27;Access-Control-Allow-Origin&#x27;] = &#x27;*&#x27; return response# 同样可以将app替换为蓝图在局部开启跨域","categories":[],"tags":[{"name":"Flask","slug":"Flask","permalink":"http://example.com/tags/Flask/"},{"name":"跨域","slug":"跨域","permalink":"http://example.com/tags/%E8%B7%A8%E5%9F%9F/"}]},{"title":"Python使用redis","slug":"Python使用redis","date":"2022-02-06T08:42:53.000Z","updated":"2022-02-06T11:40:18.843Z","comments":true,"path":"2022/02/06/Python使用redis/","link":"","permalink":"http://example.com/2022/02/06/Python%E4%BD%BF%E7%94%A8redis/","excerpt":"安装Redis模块Python无内置redis工具，需先安装redis模块： 1pip3 install redis 连接数据库12345import redisr = redis.StrictRedis(host=&#x27;localhost&#x27;, port=6379, decode_responses=True)r.set(&#x27;name&#x27;, &#x27;Lihua&#x27;)print(r[&#x27;name&#x27;])print(r.get(&#x27;name&#x27;)","text":"安装Redis模块Python无内置redis工具，需先安装redis模块： 1pip3 install redis 连接数据库12345import redisr = redis.StrictRedis(host=&#x27;localhost&#x27;, port=6379, decode_responses=True)r.set(&#x27;name&#x27;, &#x27;Lihua&#x27;)print(r[&#x27;name&#x27;])print(r.get(&#x27;name&#x27;) redis 提供两个类 Redis 和 StrictRedis, StrictRedis 用于实现大部分官方的命令，Redis 是 StrictRedis 的子类，用于向后兼用旧版本。 redis 取出的结果默认是字节，可以设定 decode_responses&#x3D;True 改成字符串。 连接池redis-py 使用 connection pool 来管理对一个 redis server 的所有连接，避免每次建立、释放连接的开销。 默认，每个Redis实例都会维护一个自己的连接池。可以直接建立一个连接池，然后作为参数 Redis，这样就可以实现多个 Redis 实例共享一个连接池。 123import redispool = redis.ConnectionPool(host=&#x27;localhost&#x27;, port=6379, decode_responses=True)r = redis.Redis(connection_pool=pool)","categories":[],"tags":[{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"},{"name":"数据库","slug":"数据库","permalink":"http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Python","slug":"Python","permalink":"http://example.com/tags/Python/"}]},{"title":"Mac安装Reids并配置","slug":"Mac安装Reids并配置","date":"2022-02-04T13:43:24.000Z","updated":"2022-02-05T02:00:42.792Z","comments":true,"path":"2022/02/04/Mac安装Reids并配置/","link":"","permalink":"http://example.com/2022/02/04/Mac%E5%AE%89%E8%A3%85Reids%E5%B9%B6%E9%85%8D%E7%BD%AE/","excerpt":"安装 使用Homebrew安装 安装命令： 1brew install redis 12345678910==&gt; Downloading https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/redis-6.2.6.monte######################################################################## 100.0%==&gt; Pouring redis-6.2.6.monterey.bottle.tar.gz==&gt; CaveatsTo restart redis after an upgrade: brew services restart redisOr, if you don&#x27;t want/need a background service you can just run: /usr/local/opt/redis/bin/redis-server /usr/local/etc/redis.conf==&gt; Summary🍺 /usr/local/Cellar/redis/6.2.6: 14 files, 2.0MB","text":"安装 使用Homebrew安装 安装命令： 1brew install redis 12345678910==&gt; Downloading https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/redis-6.2.6.monte######################################################################## 100.0%==&gt; Pouring redis-6.2.6.monterey.bottle.tar.gz==&gt; CaveatsTo restart redis after an upgrade: brew services restart redisOr, if you don&#x27;t want/need a background service you can just run: /usr/local/opt/redis/bin/redis-server /usr/local/etc/redis.conf==&gt; Summary🍺 /usr/local/Cellar/redis/6.2.6: 14 files, 2.0MB 下载bin文件并配置环境变量 日后更新(&#x2F;&#x2F;&#x2F;▽&#x2F;&#x2F;&#x2F;) 配置配置文件路径： /usr/local/opt/redis/bin/redis-server、 /usr/local/etc/redis.conf 配置项 说明 port 6379 指定 Redis 监听端口，默认端口为 6379 bind 127.0.0.1 绑定的主机地址 databases 16 设置数据库的数量，默认数据库为0，可以使用SELECT 命令在连接上指定数据库id save &lt;seconds&gt; &lt;changes&gt; 指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合 rdbcompression yes 指定存储至本地数据库时是否压缩数据，默认为 yes，Redis 采用 LZF 压缩，如果为了节省 CPU 时间，可以关闭该选项，但会导致数据库文件变的巨大 dbfilename dump.rdb 指定本地数据库文件名，默认值为 dump.rdb dir ./ 指定本地数据库存放目录 include /path/to/local.conf 指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件 维护 查看redis进程 1ps axu | grep redis 启动、关闭redis服务 123brew services start redisbrew services stop redisbrew services restart redis ……","categories":[],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Redis","slug":"Redis","permalink":"http://example.com/tags/Redis/"}]},{"title":"GitHub删除所有提交历史","slug":"GitHub删除所有提交历史","date":"2022-02-04T04:02:24.000Z","updated":"2022-02-04T08:49:48.864Z","comments":true,"path":"2022/02/04/GitHub删除所有提交历史/","link":"","permalink":"http://example.com/2022/02/04/GitHub%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2/","excerpt":"效果将代码保持在当前状态，清空commit history。 思路创建新分支 -&gt; 将文件添加到新分支 -&gt; 提交更改 -&gt; 删除旧master分支 -&gt; 重命名新分支 -&gt; 强制更新仓库 步骤","text":"效果将代码保持在当前状态，清空commit history。 思路创建新分支 -&gt; 将文件添加到新分支 -&gt; 提交更改 -&gt; 删除旧master分支 -&gt; 重命名新分支 -&gt; 强制更新仓库 步骤 创建新分支 1git checkout --orphan latest_branch 将文件添加到新分支 1git add -A 提交更改 1git commit -am &quot;Init new branch&quot; 删除旧master分支 1git branch -D master 重命名新分支 1git branch -m master 强制更新仓库 1git push -f origin master","categories":[],"tags":[{"name":"git","slug":"git","permalink":"http://example.com/tags/git/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-02-04T03:29:52.358Z","updated":"2022-02-04T03:29:52.358Z","comments":true,"path":"2022/02/04/hello-world/","link":"","permalink":"http://example.com/2022/02/04/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Flask","slug":"Flask","permalink":"http://example.com/tags/Flask/"},{"name":"跨域","slug":"跨域","permalink":"http://example.com/tags/%E8%B7%A8%E5%9F%9F/"},{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"},{"name":"数据库","slug":"数据库","permalink":"http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Python","slug":"Python","permalink":"http://example.com/tags/Python/"},{"name":"Redis","slug":"Redis","permalink":"http://example.com/tags/Redis/"},{"name":"git","slug":"git","permalink":"http://example.com/tags/git/"}]}